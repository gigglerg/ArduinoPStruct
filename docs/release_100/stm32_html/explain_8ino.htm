<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArduinoPStruct: examples/explain/explain.ino File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(function() { init_search(); });
/* @license-end */
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygenstyle.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ArduinoPStruct
   &#160;<span id="projectnumber">release_100-d7d59ac (git)</span>
   </div>
   <div id="projectbrief">Library for accessing flash with ware levelling, supporting Arduino and OpenSTM32 (GPL).</div>
  </td>
   <td>        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
</td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('explain_8ino.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#define-members">Macros</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">explain.ino File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="media_8h_source.htm">media.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="struct_8h_source.htm">struct.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="stm32_2f103_2wrap_8h_source.htm">stm32/f103/wrap.h</a>&quot;</code><br />
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structconfig__t.htm">config_t</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Application specific ADT, you define this to suit your data requirements.  <a href="structconfig__t.htm#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:a2cc600954192f9508dccfa4ff5d76b05"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="explain_8ino.htm#a2cc600954192f9508dccfa4ff5d76b05">BOARD_LED_PIN</a>&#160;&#160;&#160;33</td></tr>
<tr class="memdesc:a2cc600954192f9508dccfa4ff5d76b05"><td class="mdescLeft">&#160;</td><td class="mdescRight">Example use of PStruct (persistent storage structure classes).  <a href="explain_8ino.htm#a2cc600954192f9508dccfa4ff5d76b05">More...</a><br /></td></tr>
<tr class="separator:a2cc600954192f9508dccfa4ff5d76b05"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab8f6ed36199ef165993f009f946eb0b3"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="explain_8ino.htm#ab8f6ed36199ef165993f009f946eb0b3">PSTRUCT_USE_N_WARELEVELS</a>&#160;&#160;&#160;5</td></tr>
<tr class="memdesc:ab8f6ed36199ef165993f009f946eb0b3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Application specific macro stating how many storage copies are to be used.  <a href="explain_8ino.htm#ab8f6ed36199ef165993f009f946eb0b3">More...</a><br /></td></tr>
<tr class="separator:ab8f6ed36199ef165993f009f946eb0b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:aa47f1e543d00f5e14059c4d14eaeb3e8"><td class="memItemLeft" align="right" valign="top">const uint8_t data[<a class="el" href="struct_8h.htm#aaeac7b7b16deaf1e5b406dc283698328">PERSISTSTRUCT_SIZE</a>(<a class="el" href="structconfig__t.htm">config_t</a>, <a class="el" href="stm32_2f103_2flash_8h.htm#af57c3bdb2065e8732fdb707e84dd3275">STM32F103X_FLASH_PAGE_SIZE</a>, <a class="el" href="explain_8ino.htm#ab8f6ed36199ef165993f009f946eb0b3">PSTRUCT_USE_N_WARELEVELS</a>)]&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="explain_8ino.htm#aa47f1e543d00f5e14059c4d14eaeb3e8">__attribute__</a> ((aligned(<a class="el" href="stm32_2f103_2flash_8h.htm#af57c3bdb2065e8732fdb707e84dd3275">STM32F103X_FLASH_PAGE_SIZE</a>)))</td></tr>
<tr class="memdesc:aa47f1e543d00f5e14059c4d14eaeb3e8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Flash allocation by compiler rather than specifying an address that may or may not be used.  <a href="explain_8ino.htm#aa47f1e543d00f5e14059c4d14eaeb3e8">More...</a><br /></td></tr>
<tr class="separator:aa47f1e543d00f5e14059c4d14eaeb3e8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a694e0b7ab821efbfd482317689b28a00"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classpersist_1_1_struct.htm">persist::Struct</a>&lt; <a class="el" href="structconfig__t.htm">config_t</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="explain_8ino.htm#a694e0b7ab821efbfd482317689b28a00">g_cfg_ps</a> (<a class="el" href="pointers_8ino.htm#a9f9ccb7742ef3ef7b424b4a93ba4fbb4">g_media</a>, reinterpret_cast&lt; uint32_t * &gt;(const_cast&lt; uint8_t * &gt;(&amp;data[0])), <a class="el" href="explain_8ino.htm#ab8f6ed36199ef165993f009f946eb0b3">PSTRUCT_USE_N_WARELEVELS</a>)</td></tr>
<tr class="memdesc:a694e0b7ab821efbfd482317689b28a00"><td class="mdescLeft">&#160;</td><td class="mdescRight">Use <a class="el" href="structconfig__t.htm" title="Application specific ADT, you define this to suit your data requirements.">config_t</a> and g_media for persistent storage, n pages worth.  <a href="explain_8ino.htm#a694e0b7ab821efbfd482317689b28a00">More...</a><br /></td></tr>
<tr class="separator:a694e0b7ab821efbfd482317689b28a00"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:a9f9ccb7742ef3ef7b424b4a93ba4fbb4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classwrap_1_1_flash.htm">wrap::Flash</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="explain_8ino.htm#a9f9ccb7742ef3ef7b424b4a93ba4fbb4">g_media</a></td></tr>
<tr class="memdesc:a9f9ccb7742ef3ef7b424b4a93ba4fbb4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create your media access instance.  <a href="explain_8ino.htm#a9f9ccb7742ef3ef7b424b4a93ba4fbb4">More...</a><br /></td></tr>
<tr class="separator:a9f9ccb7742ef3ef7b424b4a93ba4fbb4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe4e7e77b0d1202d865b0ba308a5d01e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structconfig__t.htm">config_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="explain_8ino.htm#abe4e7e77b0d1202d865b0ba308a5d01e">g_cfg</a></td></tr>
<tr class="memdesc:abe4e7e77b0d1202d865b0ba308a5d01e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Your application ADT.  <a href="explain_8ino.htm#abe4e7e77b0d1202d865b0ba308a5d01e">More...</a><br /></td></tr>
<tr class="separator:abe4e7e77b0d1202d865b0ba308a5d01e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a id="a2cc600954192f9508dccfa4ff5d76b05"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2cc600954192f9508dccfa4ff5d76b05">&#9670;&nbsp;</a></span>BOARD_LED_PIN</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define BOARD_LED_PIN&#160;&#160;&#160;33</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Example use of PStruct (persistent storage structure classes). </p>
<p>In this example we attempt to load a user defined ADT but if that fails we use default values. The ADT is printed to serial and a counter field is then incremented with save attempted. Next time the program boots the process repeats, each time persistent storage content should change.</p>
<p>Architecture support: AVR8 (Uno/Nano) STM32 (F103. Blue pill/Maple mini)</p>
<p>DG, 2019 </p>
<dl class="section examples"><dt>Examples</dt><dd><a class="el" href="explain_8ino-example.htm#a13">explain.ino</a>.</dd>
</dl>

</div>
</div>
<a id="ab8f6ed36199ef165993f009f946eb0b3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab8f6ed36199ef165993f009f946eb0b3">&#9670;&nbsp;</a></span>PSTRUCT_USE_N_WARELEVELS</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PSTRUCT_USE_N_WARELEVELS&#160;&#160;&#160;5</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Application specific macro stating how many storage copies are to be used. </p>
<p>this essential controls wear levelling as a higher value will use more storage over time but increases endurance and therefore your applications useful life. If you know you are likely to perform a lot of writes, increase the value to suit. You may need to consult at your devices flash module manufacturer datasheet/reference manual in order to correctly size. </p>
<dl class="section examples"><dt>Examples</dt><dd><a class="el" href="explain_8ino-example.htm#a4">explain.ino</a>.</dd>
</dl>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="aa47f1e543d00f5e14059c4d14eaeb3e8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa47f1e543d00f5e14059c4d14eaeb3e8">&#9670;&nbsp;</a></span>__attribute__()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const uint8_t data [<a class="el" href="struct_8h.htm#aaeac7b7b16deaf1e5b406dc283698328">PERSISTSTRUCT_SIZE</a>(<a class="el" href="structconfig__t.htm">config_t</a>,<a class="el" href="stm32_2f103_2flash_8h.htm#af57c3bdb2065e8732fdb707e84dd3275">STM32F103X_FLASH_PAGE_SIZE</a>,<a class="el" href="explain_8ino.htm#ab8f6ed36199ef165993f009f946eb0b3">PSTRUCT_USE_N_WARELEVELS</a>)] __attribute__ </td>
          <td>(</td>
          <td class="paramtype">(aligned(<a class="el" href="stm32_2f103_2flash_8h.htm#af57c3bdb2065e8732fdb707e84dd3275">STM32F103X_FLASH_PAGE_SIZE</a>))&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Flash allocation by compiler rather than specifying an address that may or may not be used. </p>
<p>This declaration will allocate enough space, aligned by page so it can be safely erased and programmed without affecting the rest of program code. Doesn't matter what you fill with as it won't get loaded correctly and defaults will be written first time executing </p>
<dl class="section examples"><dt>Examples</dt><dd><a class="el" href="explain_8ino-example.htm#a5">explain.ino</a>.</dd>
</dl>

</div>
</div>
<a id="a694e0b7ab821efbfd482317689b28a00"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a694e0b7ab821efbfd482317689b28a00">&#9670;&nbsp;</a></span>g_cfg_ps()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classpersist_1_1_struct.htm">persist::Struct</a>&lt;<a class="el" href="structconfig__t.htm">config_t</a>&gt; g_cfg_ps </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="pointers_8ino.htm#a9f9ccb7742ef3ef7b424b4a93ba4fbb4">g_media</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">reinterpret_cast&lt; uint32_t * &gt;&#160;</td>
          <td class="paramname"><em>const_cast&lt; uint8_t * &gt;(&amp;data</em>[0]), </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="explain_8ino.htm#ab8f6ed36199ef165993f009f946eb0b3">PSTRUCT_USE_N_WARELEVELS</a>&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Use <a class="el" href="structconfig__t.htm" title="Application specific ADT, you define this to suit your data requirements.">config_t</a> and g_media for persistent storage, n pages worth. </p>
<p>use this instance to update media with your structure changes or to simple load your structure. Here we just stick the data manually at the end of storage </p>
<dl class="section examples"><dt>Examples</dt><dd><a class="el" href="explain_8ino-example.htm#a8">explain.ino</a>.</dd>
</dl>

</div>
</div>
<h2 class="groupheader">Variable Documentation</h2>
<a id="abe4e7e77b0d1202d865b0ba308a5d01e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abe4e7e77b0d1202d865b0ba308a5d01e">&#9670;&nbsp;</a></span>g_cfg</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structconfig__t.htm">config_t</a> g_cfg</td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">= {</div>
<div class="line">    .value1 = 0x0c0ffee0,</div>
<div class="line">    .value2 = 0x1234,</div>
<div class="line">    <span class="stringliteral">&quot;Heidi\0&quot;</span></div>
<div class="line">}</div>
</div><!-- fragment -->
<p>Your application ADT. </p>
<p>Use this to access your data, defaults optional and depends upon what you do with save(...). if using PERSISTSTRUCT_POINTERS then you'll have to write these before invoking save(...) because failed load would be using the same memory </p>
<dl class="section examples"><dt>Examples</dt><dd><a class="el" href="explain_8ino-example.htm#a9">explain.ino</a>.</dd>
</dl>

</div>
</div>
<a id="a9f9ccb7742ef3ef7b424b4a93ba4fbb4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9f9ccb7742ef3ef7b424b4a93ba4fbb4">&#9670;&nbsp;</a></span>g_media</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwrap_1_1_flash.htm">wrap::Flash</a> g_media</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Create your media access instance. </p>
<p>This wrapper class allows you to customise where your persistent storage resides. It is normally via on-chip flash but could be some place else should you decide to write your own. </p>
<dl class="section examples"><dt>Examples</dt><dd><a class="el" href="explain_8ino-example.htm#a2">explain.ino</a>.</dd>
</dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_d28a4824dc47e487b107a5db32ef43c4.htm">examples</a></li><li class="navelem"><a class="el" href="dir_cf85eb5c1c2908a42adfceb8b4b05c30.htm">explain</a></li><li class="navelem"><a class="el" href="explain_8ino.htm">explain.ino</a></li>
    <li class="footer">Generated on Mon Jan 1 2024 16:52:56 for ArduinoPStruct by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
