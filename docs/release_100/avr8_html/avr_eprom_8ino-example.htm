<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArduinoPStruct: avr_eprom.ino</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(function() { init_search(); });
/* @license-end */
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygenstyle.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ArduinoPStruct
   &#160;<span id="projectnumber">release_100-d7d59ac (git)</span>
   </div>
   <div id="projectbrief">Library for accessing flash with ware levelling, supporting Arduino and OpenSTM32 (GPL).</div>
  </td>
   <td>        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
</td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('avr_eprom_8ino-example.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">avr_eprom.ino</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><span class="comment">/**</span></div>
<div class="line"><span class="comment"> * Example use of PStruct (persistent storage structure classes).  In this example we store a user defined ADT (once) and </span></div>
<div class="line"><span class="comment"> * then repeatedly loads it upon reboots.</span></div>
<div class="line"><span class="comment"> *</span></div>
<div class="line"><span class="comment"> * Architecture support:</span></div>
<div class="line"><span class="comment"> *  AVR8 (Uno/Nano)</span></div>
<div class="line"><span class="comment"> *</span></div>
<div class="line"><span class="comment"> * DG, 2019</span></div>
<div class="line"><span class="comment"> */</span></div>
<div class="line"> </div>
<div class="line"><span class="preprocessor">#if !defined(ARDUINO_ARCH_AVR)</span></div>
<div class="line"><span class="preprocessor">#error Unsupported core</span></div>
<div class="line"><span class="preprocessor">#endif</span></div>
<div class="line"> </div>
<div class="line"><span class="comment">// Include media storage access base class and user api</span></div>
<div class="line"><span class="preprocessor">#include &quot;<a class="code" href="media_8h.htm">media.h</a>&quot;</span></div>
<div class="line"><span class="preprocessor">#include &quot;<a class="code" href="struct_8h.htm">struct.h</a>&quot;</span></div>
<div class="line"> </div>
<div class="line"><span class="comment">// Include chip specific media wrapper</span></div>
<div class="line"><span class="preprocessor">#include &quot;<a class="code" href="mega_2wrap_8h.htm">mega/wrap.h</a>&quot;</span></div>
<div class="line"><span class="comment"></span> </div>
<div class="line"><span class="comment">/**</span></div>
<div class="line"><span class="comment"> * Application specific macro stating how many storage pages are to be used.  this essential controls wear levelling as a </span></div>
<div class="line"><span class="comment"> * higher value will use more storage over time but increases endurance and therefore your applications useful life.  If </span></div>
<div class="line"><span class="comment"> * you know you are likely to perform a lot of writes, increase the value to suit.  You may need to look at your devices</span></div>
<div class="line"><span class="comment"> * flash module in manufacturer datasheet/reference manual in order to correctly size.</span></div>
<div class="line"><span class="comment"> */</span></div>
<div class="line"><span class="preprocessor">#define PSTRUCT_USE_N_PAGES        5</span></div>
<div class="line"> </div>
<div class="line"><span class="comment"></span> </div>
<div class="line"><span class="comment">/**</span></div>
<div class="line"><span class="comment"> * Application specific ADT, you define this to suit your data requirements.  It is written to and read from persistent storage</span></div>
<div class="line"><span class="comment"> * and you will access your data via this type.  Most likely this will be a configuration structure of some form.</span></div>
<div class="line"><span class="comment"> *</span></div>
<div class="line"><span class="comment"> * @note packing not important whatever gives to best optimisation either for access by cpu (typical padded) or storage (not padded)</span></div>
<div class="line"><span class="comment"> */</span></div>
<div class="line"><span class="preprocessor">#pragma pack(push,1)</span></div>
<div class="line"><span class="keyword">typedef</span> <span class="keyword">struct </span>{</div>
<div class="line">    <span class="keywordtype">char</span>  str[6];    <span class="comment">// C array size ensures ensures structure not a division of sizeof(uint32_t)</span></div>
<div class="line">    uint32_t value1;</div>
<div class="line">    uint16_t value2;</div>
<div class="line">}<a name="_a0"></a><a class="code" href="structcfg__t.htm">cfg_t</a>;</div>
<div class="line"><span class="preprocessor">#pragma pack(pop)</span></div>
<div class="line"> </div>
<div class="line"><span class="comment"></span> </div>
<div class="line"><span class="comment">/**</span></div>
<div class="line"><span class="comment"> * Create your media access instance.  This wrapper class allows you to customise where your persistent storage resides.  It is</span></div>
<div class="line"><span class="comment"> * normally via on-chip flash but could be some place else should you decide to write your own.  AVR on-chip data EE doesn&#39;t use </span></div>
<div class="line"><span class="comment"> * pages which is why here calculateStorageUnitSize() is used to make a page the size of your ADT + overhead - this is optional </span></div>
<div class="line"><span class="comment"> * and you could specify a page size like used by various flash types</span></div>
<div class="line"><span class="comment"> */</span></div>
<div class="line"><a name="_a1"></a><a class="code" href="classwrap_1_1_ee.htm">wrap::Ee&lt;persist::Struct&lt;cfg_t&gt;::GetStorageUnitSize</a>()&gt; <a name="a2"></a><a class="code" href="avr__eprom_8ino.htm#a26083b91bef2d316a1d9d8da0eb063f7">g_media</a>;</div>
<div class="line"> </div>
<div class="line"><span class="comment"></span> </div>
<div class="line"><span class="comment">/**</span></div>
<div class="line"><span class="comment"> * Use cfg_t and g_media for persistent storage, n pages worth.  Use this instance to update media with your structure changes</span></div>
<div class="line"><span class="comment"> * or to simple load your structure.</span></div>
<div class="line"><span class="comment"> */</span></div>
<div class="line"><a name="_a3"></a><a class="code" href="classpersist_1_1_struct.htm">persist::Struct&lt;cfg_t&gt;</a> <a name="a4"></a><a class="code" href="avr__eprom_8ino.htm#a75a16f173abd1d6cd37c9423ce61d038">g_cfg_ps</a>(<a class="code" href="avr__eprom_8ino.htm#a26083b91bef2d316a1d9d8da0eb063f7">g_media</a>, <a class="code" href="avr__eprom_8ino.htm#a26083b91bef2d316a1d9d8da0eb063f7">g_media</a>.GetStart(), <a name="a5"></a><a class="code" href="avr__eprom_8ino.htm#ad121b13443dd3072dd52ce865d82dda5">PSTRUCT_USE_N_PAGES</a>);</div>
<div class="line"> </div>
<div class="line"><span class="comment"></span> </div>
<div class="line"><span class="comment">/**</span></div>
<div class="line"><span class="comment"> * Your application ADT.  use this to access your data</span></div>
<div class="line"><span class="comment"> */</span></div>
<div class="line"><a class="code" href="structcfg__t.htm">cfg_t</a> <a name="a6"></a><a class="code" href="avr__eprom_8ino.htm#abe2b5ea03964615f886813c505ea9062">g_cfg</a>;</div>
<div class="line"> </div>
<div class="line"> </div>
<div class="line"><span class="keywordtype">void</span> setup() {</div>
<div class="line">    Serial.begin(9600);</div>
<div class="line">    <span class="keywordflow">while</span>(!Serial) { }</div>
<div class="line">    </div>
<div class="line">    Serial.println(<span class="stringliteral">&quot;setup()&quot;</span>);</div>
<div class="line"> </div>
<div class="line">    <span class="comment">// Attempt to load user ADT from media</span></div>
<div class="line">    <span class="keywordflow">if</span> (<a class="code" href="avr__eprom_8ino.htm#a75a16f173abd1d6cd37c9423ce61d038">g_cfg_ps</a>.Load(<a class="code" href="avr__eprom_8ino.htm#abe2b5ea03964615f886813c505ea9062">g_cfg</a>)) {</div>
<div class="line">        <span class="comment">// ADT loaded.  now you can access your data</span></div>
<div class="line">    }<span class="keywordflow">else</span> {</div>
<div class="line">        <span class="comment">// ADT load fail.  Assume we have never written it and setup default here.  we should really only run this code once on a new device</span></div>
<div class="line"> </div>
<div class="line">        Serial.println(<span class="stringliteral">&quot;New device or worn out device.  Using default settings&quot;</span>);</div>
<div class="line"> </div>
<div class="line">        <span class="comment">// Initial structure test data</span></div>
<div class="line">        <a class="code" href="avr__eprom_8ino.htm#abe2b5ea03964615f886813c505ea9062">g_cfg</a>.<a name="a7"></a>value1 = 0xcafef00d;</div>
<div class="line">        <a class="code" href="avr__eprom_8ino.htm#abe2b5ea03964615f886813c505ea9062">g_cfg</a>.<a name="a8"></a>value2 = 0x4321;</div>
<div class="line">        <a class="code" href="avr__eprom_8ino.htm#abe2b5ea03964615f886813c505ea9062">g_cfg</a>.<a name="a9"></a>str[0] = <span class="charliteral">&#39;H&#39;</span>;</div>
<div class="line">        <a class="code" href="avr__eprom_8ino.htm#abe2b5ea03964615f886813c505ea9062">g_cfg</a>.str[1] = <span class="charliteral">&#39;e&#39;</span>;</div>
<div class="line">        <a class="code" href="avr__eprom_8ino.htm#abe2b5ea03964615f886813c505ea9062">g_cfg</a>.str[2] = <span class="charliteral">&#39;i&#39;</span>;</div>
<div class="line">        <a class="code" href="avr__eprom_8ino.htm#abe2b5ea03964615f886813c505ea9062">g_cfg</a>.str[3] = <span class="charliteral">&#39;d&#39;</span>;</div>
<div class="line">        <a class="code" href="avr__eprom_8ino.htm#abe2b5ea03964615f886813c505ea9062">g_cfg</a>.str[4] = <span class="charliteral">&#39;i&#39;</span>;</div>
<div class="line">        <a class="code" href="avr__eprom_8ino.htm#abe2b5ea03964615f886813c505ea9062">g_cfg</a>.str[5] = <span class="charliteral">&#39;\0&#39;</span>;</div>
<div class="line">        </div>
<div class="line">        <span class="comment">// Save ADT to media with attempt to find next position just use start of media for next write</span></div>
<div class="line">        <span class="keywordflow">if</span> (<a class="code" href="avr__eprom_8ino.htm#a75a16f173abd1d6cd37c9423ce61d038">g_cfg_ps</a>.Save(<a class="code" href="avr__eprom_8ino.htm#abe2b5ea03964615f886813c505ea9062">g_cfg</a>,<span class="keyword">true</span>)) {</div>
<div class="line">            Serial.println(<span class="stringliteral">&quot;Write success&quot;</span>);</div>
<div class="line">        }<span class="keywordflow">else</span> {</div>
<div class="line">            Serial.println(<span class="stringliteral">&quot;Write failed.  assume device worn out!&quot;</span>);</div>
<div class="line">        }</div>
<div class="line">    }</div>
<div class="line"> </div>
<div class="line">    <span class="comment">// Print out ADT</span></div>
<div class="line">    Serial.println(<span class="stringliteral">&quot;ADT dump&quot;</span>);</div>
<div class="line">    Serial.println(<span class="stringliteral">&quot;--------&quot;</span>);</div>
<div class="line">    Serial.print(<span class="stringliteral">&quot;g_cfg.value1 = &quot;</span>);</div>
<div class="line">    Serial.println(<a class="code" href="avr__eprom_8ino.htm#abe2b5ea03964615f886813c505ea9062">g_cfg</a>.value1, HEX);</div>
<div class="line">    Serial.print(<span class="stringliteral">&quot;g_cfg.value2 = &quot;</span>);</div>
<div class="line">    Serial.println(<a class="code" href="avr__eprom_8ino.htm#abe2b5ea03964615f886813c505ea9062">g_cfg</a>.value2, HEX);</div>
<div class="line">    Serial.print(<span class="stringliteral">&quot;g_cfg.str = &quot;</span>);</div>
<div class="line">    Serial.println(<a class="code" href="avr__eprom_8ino.htm#abe2b5ea03964615f886813c505ea9062">g_cfg</a>.str);</div>
<div class="line">    Serial.println(<span class="stringliteral">&quot;Done&quot;</span>);</div>
<div class="line">}</div>
<div class="line"> </div>
<div class="line"><span class="keywordtype">void</span> loop() {</div>
<div class="line">}</div>
</div><!-- fragment --> </div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aavr__eprom_8ino_htm_ad121b13443dd3072dd52ce865d82dda5"><div class="ttname"><a href="avr__eprom_8ino.htm#ad121b13443dd3072dd52ce865d82dda5">PSTRUCT_USE_N_PAGES</a></div><div class="ttdeci">#define PSTRUCT_USE_N_PAGES</div><div class="ttdoc">Example use of PStruct (persistent storage structure classes).</div><div class="ttdef"><b>Definition:</b> avr_eprom.ino:28</div></div>
<div class="ttc" id="astructcfg__t_htm"><div class="ttname"><a href="structcfg__t.htm">cfg_t</a></div><div class="ttdoc">Application specific ADT, you define this to suit your data requirements.</div><div class="ttdef"><b>Definition:</b> avr_eprom.ino:38</div></div>
<div class="ttc" id="aavr__eprom_8ino_htm_a26083b91bef2d316a1d9d8da0eb063f7"><div class="ttname"><a href="avr__eprom_8ino.htm#a26083b91bef2d316a1d9d8da0eb063f7">g_media</a></div><div class="ttdeci">wrap::Ee&lt; persist::Struct&lt; cfg_t &gt;::GetStorageUnitSize()&gt; g_media</div><div class="ttdoc">Create your media access instance.</div><div class="ttdef"><b>Definition:</b> avr_eprom.ino:52</div></div>
<div class="ttc" id="amega_2wrap_8h_htm"><div class="ttname"><a href="mega_2wrap_8h.htm">wrap.h</a></div></div>
<div class="ttc" id="aclasspersist_1_1_struct_htm"><div class="ttname"><a href="classpersist_1_1_struct.htm">persist::Struct</a></div><div class="ttdoc">A class offering persistent storage access to a user supplied structure with ware levelling.</div><div class="ttdef"><b>Definition:</b> struct.h:51</div></div>
<div class="ttc" id="aclasswrap_1_1_ee_htm"><div class="ttname"><a href="classwrap_1_1_ee.htm">wrap::Ee</a></div><div class="ttdoc">Wrapper for MCU specialised API to EEPROM module and CRC.</div><div class="ttdef"><b>Definition:</b> wrap.h:29</div></div>
<div class="ttc" id="amedia_8h_htm"><div class="ttname"><a href="media_8h.htm">media.h</a></div></div>
<div class="ttc" id="aavr__eprom_8ino_htm_abe2b5ea03964615f886813c505ea9062"><div class="ttname"><a href="avr__eprom_8ino.htm#abe2b5ea03964615f886813c505ea9062">g_cfg</a></div><div class="ttdeci">cfg_t g_cfg</div><div class="ttdoc">Your application ADT.</div><div class="ttdef"><b>Definition:</b> avr_eprom.ino:65</div></div>
<div class="ttc" id="aavr__eprom_8ino_htm_a75a16f173abd1d6cd37c9423ce61d038"><div class="ttname"><a href="avr__eprom_8ino.htm#a75a16f173abd1d6cd37c9423ce61d038">g_cfg_ps</a></div><div class="ttdeci">persist::Struct&lt; cfg_t &gt; g_cfg_ps(g_media, g_media.GetStart(), PSTRUCT_USE_N_PAGES)</div><div class="ttdoc">Use cfg_t and g_media for persistent storage, n pages worth.</div></div>
<div class="ttc" id="astruct_8h_htm"><div class="ttname"><a href="struct_8h.htm">struct.h</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated on Mon Jan 1 2024 16:52:54 for ArduinoPStruct by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
